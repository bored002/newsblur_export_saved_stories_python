# This is a basic workflow to help you get started with Actions

name: Run Code in Container

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  schedule:
   - cron: '5 1 * * *' #runs at 00:15 UTC everyday
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# permissions:
#    contents: read
#    pages: write
#    id-token: write

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  Run_Python_Scrapper:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    timeout-minutes: 640
    strategy:
      matrix:
        python-version: [3.9] #[3.6, 3.7, 3.8, 3.9]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repo content
        uses: actions/checkout@v4
        
      # Setups python script
      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      # Runs PIP updade
      - name: Update PIP
        run: python -m pip install --upgrade pip
      
      # Runs requirments install
      - name: Install Requirements
        run: pip install -r requirements.txt # pip install flake8 pytest
        #if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
     
      #
      - name: Download previously saved artifacts
        uses: dawidd6/action-download-artifact@v7
        with:
           # Optional, GitHub token
           github_token: ${{secrets.GITHUB_TOKEN}}
           # Required, workflow file name or ID
           workflow: Scheduler.yml
           # Optional, the status or conclusion of a completed workflow to search for
           # Can be one of a workflow conclusion::
           # "failure", "success", "neutral", "cancelled", "skipped", "timed_out", "action_required"
           # Or a workflow status:
           # "completed", "in_progress", "queued"
           # Default: "completed,success"
           workflow_conclusion: success
           # Optional, will get head commit SHA
           # pr: ${{github.event.pull_request.number}}
           # Optional, no need to specify if PR is
           commit: ${{github.event.pull_request.head.sha}}
           # Optional, will use the branch
           branch: main
           # Optional, defaults to all types
           # event: push
           # Optional, will use specified workflow run
           #run_id: 1122334455
           # Optional, run number from the workflow
           # run_number: 34
           # Optional, uploaded artifact name,
           # will download all artifacts if not specified
           # and extract them in respective subdirectories
           # https://github.com/actions/download-artifact#download-all-artifacts
           name: results-csv
           # Optional, directory where to extract artifact
           path: downloads
           # Optional, defaults to current repo
           repo: ${{github.repository}}
        continue-on-error: true
      
      
      
      # Runs a set of commands using the runners shell
      - name: Execute python script # run the run.py to get the latest data
        run: python main.py ${{ secrets.USER }} ${{ secrets.PASS }}
        env:
          username: ${{ secrets.USER }}
          password: ${{ secrets.PASS }}
      
      # Upload execution results
      - name: Upload CSV artifact
        uses: actions/upload-artifact@v4
        with:
          name: results-csv
          path: output/*.csv
          if-no-files-found: warn
          retention-days: 7

  deploy_jekyll_page:
    needs: [Run_Python_Scrapper]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
        - name: Print a message
          run: echo "Your message here"
        
        - name: Checkout
          uses: actions/checkout@v4
        
        - name: Setup Pages
          uses: actions/configure-pages@v5
        
        - name: Build
          uses: actions/jekyll-build-pages@v1
          with:
              source: ./
              # source: ./your_specific_file.md --> path to the file you want Jekyll To Load
        
        # - name: Upload artifact
        - name: Upload Pages artifact
          uses: actions/upload-artifact@v4
          with:
            name: github-pages
            path: _site
            retention-days: 1
      # -----------------------------------
        - name: Deploy to GitHub Pages
          id: deployment
          uses: actions/deploy-pages@v4
        
